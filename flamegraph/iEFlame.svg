<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="250" onload="init(evt)" viewBox="0 0 1200 250" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="250" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o iEFlame.svg --pid 52096</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="239.00"> </text><svg id="frames" x="10" width="1180" total_samples="3540"><g><title>isLessThan (logEntry.py:22) (35 samples, 0.99%)</title><rect x="1.1864%" y="100" width="0.9887%" height="15" fill="rgb(227,0,7)" fg:x="42" fg:w="35"/><text x="1.4364%" y="110.50"></text></g><g><title>isLessThan (logEntry.py:23) (6 samples, 0.17%)</title><rect x="2.1751%" y="100" width="0.1695%" height="15" fill="rgb(217,0,24)" fg:x="77" fg:w="6"/><text x="2.4251%" y="110.50"></text></g><g><title>isLessThan (logEntry.py:24) (12 samples, 0.34%)</title><rect x="2.3446%" y="100" width="0.3390%" height="15" fill="rgb(221,193,54)" fg:x="83" fg:w="12"/><text x="2.5946%" y="110.50"></text></g><g><title>fromisoformat (parser.py:1680) (6 samples, 0.17%)</title><rect x="3.5593%" y="116" width="0.1695%" height="15" fill="rgb(248,212,6)" fg:x="126" fg:w="6"/><text x="3.8093%" y="126.50"></text></g><g><title>_parse_isoformat_date (parser.py:267) (19 samples, 0.54%)</title><rect x="4.0395%" y="132" width="0.5367%" height="15" fill="rgb(208,68,35)" fg:x="143" fg:w="19"/><text x="4.2895%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:268) (6 samples, 0.17%)</title><rect x="4.5763%" y="132" width="0.1695%" height="15" fill="rgb(232,128,0)" fg:x="162" fg:w="6"/><text x="4.8263%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:271) (16 samples, 0.45%)</title><rect x="4.7458%" y="132" width="0.4520%" height="15" fill="rgb(207,160,47)" fg:x="168" fg:w="16"/><text x="4.9958%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:273) (4 samples, 0.11%)</title><rect x="5.1977%" y="132" width="0.1130%" height="15" fill="rgb(228,23,34)" fg:x="184" fg:w="4"/><text x="5.4477%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:276) (15 samples, 0.42%)</title><rect x="5.3107%" y="132" width="0.4237%" height="15" fill="rgb(218,30,26)" fg:x="188" fg:w="15"/><text x="5.5607%" y="142.50"></text></g><g><title>fromisoformat (parser.py:1688) (71 samples, 2.01%)</title><rect x="3.8701%" y="116" width="2.0056%" height="15" fill="rgb(220,122,19)" fg:x="137" fg:w="71"/><text x="4.1201%" y="126.50">f..</text></g><g><title>_parse_isoformat_date (parser.py:278) (5 samples, 0.14%)</title><rect x="5.7345%" y="132" width="0.1412%" height="15" fill="rgb(250,228,42)" fg:x="203" fg:w="5"/><text x="5.9845%" y="142.50"></text></g><g><title>_parse_isoformat_time (parser.py:326) (13 samples, 0.37%)</title><rect x="6.2994%" y="132" width="0.3672%" height="15" fill="rgb(240,193,28)" fg:x="223" fg:w="13"/><text x="6.5494%" y="142.50"></text></g><g><title>_parse_isoformat_time (parser.py:327) (5 samples, 0.14%)</title><rect x="6.6667%" y="132" width="0.1412%" height="15" fill="rgb(216,20,37)" fg:x="236" fg:w="5"/><text x="6.9167%" y="142.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:282) (5 samples, 0.14%)</title><rect x="7.0621%" y="148" width="0.1412%" height="15" fill="rgb(206,188,39)" fg:x="250" fg:w="5"/><text x="7.3121%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:284) (6 samples, 0.17%)</title><rect x="7.2034%" y="148" width="0.1695%" height="15" fill="rgb(217,207,13)" fg:x="255" fg:w="6"/><text x="7.4534%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:286) (26 samples, 0.73%)</title><rect x="7.4294%" y="148" width="0.7345%" height="15" fill="rgb(231,73,38)" fg:x="263" fg:w="26"/><text x="7.6794%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:287) (11 samples, 0.31%)</title><rect x="8.1638%" y="148" width="0.3107%" height="15" fill="rgb(225,20,46)" fg:x="289" fg:w="11"/><text x="8.4138%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:290) (38 samples, 1.07%)</title><rect x="8.4746%" y="148" width="1.0734%" height="15" fill="rgb(210,31,41)" fg:x="300" fg:w="38"/><text x="8.7246%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:292) (5 samples, 0.14%)</title><rect x="9.5480%" y="148" width="0.1412%" height="15" fill="rgb(221,200,47)" fg:x="338" fg:w="5"/><text x="9.7980%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:293) (9 samples, 0.25%)</title><rect x="9.6893%" y="148" width="0.2542%" height="15" fill="rgb(226,26,5)" fg:x="343" fg:w="9"/><text x="9.9393%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:295) (10 samples, 0.28%)</title><rect x="9.9435%" y="148" width="0.2825%" height="15" fill="rgb(249,33,26)" fg:x="352" fg:w="10"/><text x="10.1935%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:298) (5 samples, 0.14%)</title><rect x="10.2260%" y="148" width="0.1412%" height="15" fill="rgb(235,183,28)" fg:x="362" fg:w="5"/><text x="10.4760%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:301) (6 samples, 0.17%)</title><rect x="10.3672%" y="148" width="0.1695%" height="15" fill="rgb(221,5,38)" fg:x="367" fg:w="6"/><text x="10.6172%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:329) (135 samples, 3.81%)</title><rect x="6.8079%" y="132" width="3.8136%" height="15" fill="rgb(247,18,42)" fg:x="241" fg:w="135"/><text x="7.0579%" y="142.50">_par..</text></g><g><title>_parse_isoformat_time (parser.py:332) (5 samples, 0.14%)</title><rect x="10.6215%" y="132" width="0.1412%" height="15" fill="rgb(241,131,45)" fg:x="376" fg:w="5"/><text x="10.8715%" y="142.50"></text></g><g><title>_parse_isoformat_time (parser.py:340) (11 samples, 0.31%)</title><rect x="10.8475%" y="132" width="0.3107%" height="15" fill="rgb(249,31,29)" fg:x="384" fg:w="11"/><text x="11.0975%" y="142.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:284) (4 samples, 0.11%)</title><rect x="11.2994%" y="148" width="0.1130%" height="15" fill="rgb(225,111,53)" fg:x="400" fg:w="4"/><text x="11.5494%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:286) (7 samples, 0.20%)</title><rect x="11.4124%" y="148" width="0.1977%" height="15" fill="rgb(238,160,17)" fg:x="404" fg:w="7"/><text x="11.6624%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:287) (11 samples, 0.31%)</title><rect x="11.6102%" y="148" width="0.3107%" height="15" fill="rgb(214,148,48)" fg:x="411" fg:w="11"/><text x="11.8602%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:290) (29 samples, 0.82%)</title><rect x="11.9209%" y="148" width="0.8192%" height="15" fill="rgb(232,36,49)" fg:x="422" fg:w="29"/><text x="12.1709%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:292) (4 samples, 0.11%)</title><rect x="12.7401%" y="148" width="0.1130%" height="15" fill="rgb(209,103,24)" fg:x="451" fg:w="4"/><text x="12.9901%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:293) (6 samples, 0.17%)</title><rect x="12.8531%" y="148" width="0.1695%" height="15" fill="rgb(229,88,8)" fg:x="455" fg:w="6"/><text x="13.1031%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:343) (73 samples, 2.06%)</title><rect x="11.1582%" y="132" width="2.0621%" height="15" fill="rgb(213,181,19)" fg:x="395" fg:w="73"/><text x="11.4082%" y="142.50">_..</text></g><g><title>_parse_hh_mm_ss_ff (parser.py:295) (7 samples, 0.20%)</title><rect x="13.0226%" y="148" width="0.1977%" height="15" fill="rgb(254,191,54)" fg:x="461" fg:w="7"/><text x="13.2726%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:344) (38 samples, 1.07%)</title><rect x="13.2203%" y="132" width="1.0734%" height="15" fill="rgb(241,83,37)" fg:x="468" fg:w="38"/><text x="13.4703%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (parser.py:344) (6 samples, 0.17%)</title><rect x="14.1243%" y="148" width="0.1695%" height="15" fill="rgb(233,36,39)" fg:x="500" fg:w="6"/><text x="14.3743%" y="158.50"></text></g><g><title>__new__ (parser.py:469) (4 samples, 0.11%)</title><rect x="15.3390%" y="148" width="0.1130%" height="15" fill="rgb(226,3,54)" fg:x="543" fg:w="4"/><text x="15.5890%" y="158.50"></text></g><g><title>__new__ (parser.py:473) (5 samples, 0.14%)</title><rect x="15.4802%" y="148" width="0.1412%" height="15" fill="rgb(245,192,40)" fg:x="548" fg:w="5"/><text x="15.7302%" y="158.50"></text></g><g><title>__new__ (parser.py:478) (4 samples, 0.11%)</title><rect x="15.6780%" y="148" width="0.1130%" height="15" fill="rgb(238,167,29)" fg:x="555" fg:w="4"/><text x="15.9280%" y="158.50"></text></g><g><title>__new__ (parser.py:488) (6 samples, 0.17%)</title><rect x="15.7910%" y="148" width="0.1695%" height="15" fill="rgb(232,182,51)" fg:x="559" fg:w="6"/><text x="16.0410%" y="158.50"></text></g><g><title>__new__ (parser.py:489) (6 samples, 0.17%)</title><rect x="15.9605%" y="148" width="0.1695%" height="15" fill="rgb(231,60,39)" fg:x="565" fg:w="6"/><text x="16.2105%" y="158.50"></text></g><g><title>__new__ (parser.py:503) (4 samples, 0.11%)</title><rect x="16.3559%" y="148" width="0.1130%" height="15" fill="rgb(208,69,12)" fg:x="579" fg:w="4"/><text x="16.6059%" y="158.50"></text></g><g><title>__new__ (parser.py:507) (8 samples, 0.23%)</title><rect x="16.5537%" y="148" width="0.2260%" height="15" fill="rgb(235,93,37)" fg:x="586" fg:w="8"/><text x="16.8037%" y="158.50"></text></g><g><title>__new__ (parser.py:510) (4 samples, 0.11%)</title><rect x="16.8644%" y="148" width="0.1130%" height="15" fill="rgb(213,116,39)" fg:x="597" fg:w="4"/><text x="17.1144%" y="158.50"></text></g><g><title>__new__ (parser.py:526) (4 samples, 0.11%)</title><rect x="17.2599%" y="148" width="0.1130%" height="15" fill="rgb(222,207,29)" fg:x="611" fg:w="4"/><text x="17.5099%" y="158.50"></text></g><g><title>__new__ (parser.py:527) (5 samples, 0.14%)</title><rect x="17.3729%" y="148" width="0.1412%" height="15" fill="rgb(206,96,30)" fg:x="615" fg:w="5"/><text x="17.6229%" y="158.50"></text></g><g><title>__new__ (parser.py:530) (12 samples, 0.34%)</title><rect x="17.5989%" y="148" width="0.3390%" height="15" fill="rgb(218,138,4)" fg:x="623" fg:w="12"/><text x="17.8489%" y="158.50"></text></g><g><title>__new__ (parser.py:532) (4 samples, 0.11%)</title><rect x="17.9379%" y="148" width="0.1130%" height="15" fill="rgb(250,191,14)" fg:x="635" fg:w="4"/><text x="18.1879%" y="158.50"></text></g><g><title>__new__ (parser.py:534) (5 samples, 0.14%)</title><rect x="18.1356%" y="148" width="0.1412%" height="15" fill="rgb(239,60,40)" fg:x="642" fg:w="5"/><text x="18.3856%" y="158.50"></text></g><g><title>__new__ (parser.py:537) (4 samples, 0.11%)</title><rect x="18.2768%" y="148" width="0.1130%" height="15" fill="rgb(206,27,48)" fg:x="647" fg:w="4"/><text x="18.5268%" y="158.50"></text></g><g><title>__new__ (parser.py:539) (5 samples, 0.14%)</title><rect x="18.4463%" y="148" width="0.1412%" height="15" fill="rgb(225,35,8)" fg:x="653" fg:w="5"/><text x="18.6963%" y="158.50"></text></g><g><title>__new__ (parser.py:543) (4 samples, 0.11%)</title><rect x="18.6723%" y="148" width="0.1130%" height="15" fill="rgb(250,213,24)" fg:x="661" fg:w="4"/><text x="18.9223%" y="158.50"></text></g><g><title>__new__ (parser.py:546) (7 samples, 0.20%)</title><rect x="18.8418%" y="148" width="0.1977%" height="15" fill="rgb(247,123,22)" fg:x="667" fg:w="7"/><text x="19.0918%" y="158.50"></text></g><g><title>__new__ (parser.py:549) (7 samples, 0.20%)</title><rect x="19.0395%" y="148" width="0.1977%" height="15" fill="rgb(231,138,38)" fg:x="674" fg:w="7"/><text x="19.2895%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:349) (177 samples, 5.00%)</title><rect x="14.3503%" y="132" width="5.0000%" height="15" fill="rgb(231,145,46)" fg:x="508" fg:w="177"/><text x="14.6003%" y="142.50">_parse..</text></g><g><title>__new__ (parser.py:473) (8 samples, 0.23%)</title><rect x="20.5085%" y="164" width="0.2260%" height="15" fill="rgb(251,118,11)" fg:x="726" fg:w="8"/><text x="20.7585%" y="174.50"></text></g><g><title>__new__ (parser.py:474) (6 samples, 0.17%)</title><rect x="20.7345%" y="164" width="0.1695%" height="15" fill="rgb(217,147,25)" fg:x="734" fg:w="6"/><text x="20.9845%" y="174.50"></text></g><g><title>__new__ (parser.py:503) (4 samples, 0.11%)</title><rect x="21.1864%" y="164" width="0.1130%" height="15" fill="rgb(247,81,37)" fg:x="750" fg:w="4"/><text x="21.4364%" y="174.50"></text></g><g><title>__new__ (parser.py:504) (8 samples, 0.23%)</title><rect x="21.2994%" y="164" width="0.2260%" height="15" fill="rgb(209,12,38)" fg:x="754" fg:w="8"/><text x="21.5494%" y="174.50"></text></g><g><title>__new__ (parser.py:507) (5 samples, 0.14%)</title><rect x="21.5537%" y="164" width="0.1412%" height="15" fill="rgb(227,1,9)" fg:x="763" fg:w="5"/><text x="21.8037%" y="174.50"></text></g><g><title>__new__ (parser.py:515) (4 samples, 0.11%)</title><rect x="21.8927%" y="164" width="0.1130%" height="15" fill="rgb(248,47,43)" fg:x="775" fg:w="4"/><text x="22.1427%" y="174.50"></text></g><g><title>__new__ (parser.py:525) (5 samples, 0.14%)</title><rect x="22.0339%" y="164" width="0.1412%" height="15" fill="rgb(221,10,30)" fg:x="780" fg:w="5"/><text x="22.2839%" y="174.50"></text></g><g><title>__new__ (parser.py:526) (7 samples, 0.20%)</title><rect x="22.1751%" y="164" width="0.1977%" height="15" fill="rgb(210,229,1)" fg:x="785" fg:w="7"/><text x="22.4251%" y="174.50"></text></g><g><title>__new__ (parser.py:530) (10 samples, 0.28%)</title><rect x="22.5706%" y="164" width="0.2825%" height="15" fill="rgb(222,148,37)" fg:x="799" fg:w="10"/><text x="22.8206%" y="174.50"></text></g><g><title>__new__ (parser.py:531) (5 samples, 0.14%)</title><rect x="22.8531%" y="164" width="0.1412%" height="15" fill="rgb(234,67,33)" fg:x="809" fg:w="5"/><text x="23.1031%" y="174.50"></text></g><g><title>__new__ (parser.py:537) (6 samples, 0.17%)</title><rect x="23.1356%" y="164" width="0.1695%" height="15" fill="rgb(247,98,35)" fg:x="819" fg:w="6"/><text x="23.3856%" y="174.50"></text></g><g><title>__new__ (parser.py:543) (4 samples, 0.11%)</title><rect x="23.5593%" y="164" width="0.1130%" height="15" fill="rgb(247,138,52)" fg:x="834" fg:w="4"/><text x="23.8093%" y="174.50"></text></g><g><title>__new__ (parser.py:544) (5 samples, 0.14%)</title><rect x="23.6723%" y="164" width="0.1412%" height="15" fill="rgb(213,79,30)" fg:x="838" fg:w="5"/><text x="23.9223%" y="174.50"></text></g><g><title>__new__ (parser.py:549) (13 samples, 0.37%)</title><rect x="23.8983%" y="164" width="0.3672%" height="15" fill="rgb(246,177,23)" fg:x="846" fg:w="13"/><text x="24.1483%" y="174.50"></text></g><g><title>__mul__ (parser.py:648) (153 samples, 4.32%)</title><rect x="20.1130%" y="148" width="4.3220%" height="15" fill="rgb(230,62,27)" fg:x="712" fg:w="153"/><text x="20.3630%" y="158.50">__mul..</text></g><g><title>__new__ (parser.py:2145) (14 samples, 0.40%)</title><rect x="24.7175%" y="148" width="0.3955%" height="15" fill="rgb(216,154,8)" fg:x="875" fg:w="14"/><text x="24.9675%" y="158.50"></text></g><g><title>__bool__ (parser.py:739) (9 samples, 0.25%)</title><rect x="24.8588%" y="164" width="0.2542%" height="15" fill="rgb(244,35,45)" fg:x="880" fg:w="9"/><text x="25.1088%" y="174.50"></text></g><g><title>__le__ (parser.py:706) (5 samples, 0.14%)</title><rect x="25.8757%" y="164" width="0.1412%" height="15" fill="rgb(251,115,12)" fg:x="916" fg:w="5"/><text x="26.1257%" y="174.50"></text></g><g><title>_cmp (parser.py:16) (15 samples, 0.42%)</title><rect x="26.8362%" y="196" width="0.4237%" height="15" fill="rgb(240,54,50)" fg:x="950" fg:w="15"/><text x="27.0862%" y="206.50"></text></g><g><title>__new__ (parser.py:2150) (97 samples, 2.74%)</title><rect x="25.1412%" y="148" width="2.7401%" height="15" fill="rgb(233,84,52)" fg:x="890" fg:w="97"/><text x="25.3912%" y="158.50">__..</text></g><g><title>__le__ (parser.py:707) (66 samples, 1.86%)</title><rect x="26.0169%" y="164" width="1.8644%" height="15" fill="rgb(207,117,47)" fg:x="921" fg:w="66"/><text x="26.2669%" y="174.50">_..</text></g><g><title>_cmp (parser.py:731) (56 samples, 1.58%)</title><rect x="26.2994%" y="180" width="1.5819%" height="15" fill="rgb(249,43,39)" fg:x="931" fg:w="56"/><text x="26.5494%" y="190.50"></text></g><g><title>_getstate (parser.py:746) (21 samples, 0.59%)</title><rect x="27.2881%" y="196" width="0.5932%" height="15" fill="rgb(209,38,44)" fg:x="966" fg:w="21"/><text x="27.5381%" y="206.50"></text></g><g><title>_create (parser.py:2158) (13 samples, 0.37%)</title><rect x="27.9944%" y="164" width="0.3672%" height="15" fill="rgb(236,212,23)" fg:x="991" fg:w="13"/><text x="28.2444%" y="174.50"></text></g><g><title>_create (parser.py:2159) (4 samples, 0.11%)</title><rect x="28.3616%" y="164" width="0.1130%" height="15" fill="rgb(242,79,21)" fg:x="1004" fg:w="4"/><text x="28.6116%" y="174.50"></text></g><g><title>_parse_isoformat_time (parser.py:352) (321 samples, 9.07%)</title><rect x="19.4350%" y="132" width="9.0678%" height="15" fill="rgb(211,96,35)" fg:x="688" fg:w="321"/><text x="19.6850%" y="142.50">_parse_isofor..</text></g><g><title>__new__ (parser.py:2154) (22 samples, 0.62%)</title><rect x="27.8814%" y="148" width="0.6215%" height="15" fill="rgb(253,215,40)" fg:x="987" fg:w="22"/><text x="28.1314%" y="158.50"></text></g><g><title>fromisoformat (parser.py:1694) (807 samples, 22.80%)</title><rect x="5.9322%" y="116" width="22.7966%" height="15" fill="rgb(211,81,21)" fg:x="210" fg:w="807"/><text x="6.1822%" y="126.50">fromisoformat (parser.py:1694)</text></g><g><title>_parse_isoformat_time (parser.py:354) (8 samples, 0.23%)</title><rect x="28.5028%" y="132" width="0.2260%" height="15" fill="rgb(208,190,38)" fg:x="1009" fg:w="8"/><text x="28.7528%" y="142.50"></text></g><g><title>_check_date_fields (parser.py:383) (4 samples, 0.11%)</title><rect x="29.7740%" y="148" width="0.1130%" height="15" fill="rgb(235,213,38)" fg:x="1054" fg:w="4"/><text x="30.0240%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:384) (8 samples, 0.23%)</title><rect x="29.8870%" y="148" width="0.2260%" height="15" fill="rgb(237,122,38)" fg:x="1058" fg:w="8"/><text x="30.1370%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:386) (5 samples, 0.14%)</title><rect x="30.1412%" y="148" width="0.1412%" height="15" fill="rgb(244,218,35)" fg:x="1067" fg:w="5"/><text x="30.3912%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:387) (7 samples, 0.20%)</title><rect x="30.2825%" y="148" width="0.1977%" height="15" fill="rgb(240,68,47)" fg:x="1072" fg:w="7"/><text x="30.5325%" y="158.50"></text></g><g><title>_days_in_month (parser.py:50) (4 samples, 0.11%)</title><rect x="30.7627%" y="164" width="0.1130%" height="15" fill="rgb(210,16,53)" fg:x="1089" fg:w="4"/><text x="31.0127%" y="174.50"></text></g><g><title>_days_in_month (parser.py:52) (5 samples, 0.14%)</title><rect x="30.8757%" y="164" width="0.1412%" height="15" fill="rgb(235,124,12)" fg:x="1093" fg:w="5"/><text x="31.1257%" y="174.50"></text></g><g><title>_check_date_fields (parser.py:391) (20 samples, 0.56%)</title><rect x="30.5650%" y="148" width="0.5650%" height="15" fill="rgb(224,169,11)" fg:x="1082" fg:w="20"/><text x="30.8150%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:392) (4 samples, 0.11%)</title><rect x="31.1299%" y="148" width="0.1130%" height="15" fill="rgb(250,166,2)" fg:x="1102" fg:w="4"/><text x="31.3799%" y="158.50"></text></g><g><title>__new__ (parser.py:1548) (68 samples, 1.92%)</title><rect x="29.4633%" y="132" width="1.9209%" height="15" fill="rgb(242,216,29)" fg:x="1043" fg:w="68"/><text x="29.7133%" y="142.50">_..</text></g><g><title>_check_date_fields (parser.py:394) (5 samples, 0.14%)</title><rect x="31.2429%" y="148" width="0.1412%" height="15" fill="rgb(230,116,27)" fg:x="1106" fg:w="5"/><text x="31.4929%" y="158.50"></text></g><g><title>_check_time_fields (parser.py:397) (5 samples, 0.14%)</title><rect x="31.4407%" y="148" width="0.1412%" height="15" fill="rgb(228,99,48)" fg:x="1113" fg:w="5"/><text x="31.6907%" y="158.50"></text></g><g><title>_check_time_fields (parser.py:401) (4 samples, 0.11%)</title><rect x="31.7232%" y="148" width="0.1130%" height="15" fill="rgb(253,11,6)" fg:x="1123" fg:w="4"/><text x="31.9732%" y="158.50"></text></g><g><title>_check_time_fields (parser.py:403) (4 samples, 0.11%)</title><rect x="31.8362%" y="148" width="0.1130%" height="15" fill="rgb(247,143,39)" fg:x="1127" fg:w="4"/><text x="32.0862%" y="158.50"></text></g><g><title>__new__ (parser.py:1549) (33 samples, 0.93%)</title><rect x="31.3842%" y="132" width="0.9322%" height="15" fill="rgb(236,97,10)" fg:x="1111" fg:w="33"/><text x="31.6342%" y="142.50"></text></g><g><title>_check_time_fields (parser.py:411) (5 samples, 0.14%)</title><rect x="32.1751%" y="148" width="0.1412%" height="15" fill="rgb(233,208,19)" fg:x="1139" fg:w="5"/><text x="32.4251%" y="158.50"></text></g><g><title>_check_tzinfo_arg (parser.py:414) (9 samples, 0.25%)</title><rect x="32.4011%" y="148" width="0.2542%" height="15" fill="rgb(216,164,2)" fg:x="1147" fg:w="9"/><text x="32.6511%" y="158.50"></text></g><g><title>__new__ (parser.py:1551) (13 samples, 0.37%)</title><rect x="32.3164%" y="132" width="0.3672%" height="15" fill="rgb(220,129,5)" fg:x="1144" fg:w="13"/><text x="32.5664%" y="142.50"></text></g><g><title>__new__ (parser.py:1552) (16 samples, 0.45%)</title><rect x="32.6836%" y="132" width="0.4520%" height="15" fill="rgb(242,17,10)" fg:x="1157" fg:w="16"/><text x="32.9336%" y="142.50"></text></g><g><title>__new__ (parser.py:1554) (6 samples, 0.17%)</title><rect x="33.1356%" y="132" width="0.1695%" height="15" fill="rgb(242,107,0)" fg:x="1173" fg:w="6"/><text x="33.3856%" y="142.50"></text></g><g><title>isLessThan (logEntry.py:25) (1,097 samples, 30.99%)</title><rect x="2.6836%" y="100" width="30.9887%" height="15" fill="rgb(251,28,31)" fg:x="95" fg:w="1097"/><text x="2.9336%" y="110.50">isLessThan (logEntry.py:25)</text></g><g><title>fromisoformat (parser.py:1700) (175 samples, 4.94%)</title><rect x="28.7288%" y="116" width="4.9435%" height="15" fill="rgb(233,223,10)" fg:x="1017" fg:w="175"/><text x="28.9788%" y="126.50">fromis..</text></g><g><title>isLessThan (logEntry.py:26) (51 samples, 1.44%)</title><rect x="33.6723%" y="100" width="1.4407%" height="15" fill="rgb(215,21,27)" fg:x="1192" fg:w="51"/><text x="33.9223%" y="110.50"></text></g><g><title>isLessThan (logEntry.py:27) (8 samples, 0.23%)</title><rect x="35.1130%" y="100" width="0.2260%" height="15" fill="rgb(232,23,21)" fg:x="1243" fg:w="8"/><text x="35.3630%" y="110.50"></text></g><g><title>isLessThan (logEntry.py:28) (9 samples, 0.25%)</title><rect x="35.3390%" y="100" width="0.2542%" height="15" fill="rgb(244,5,23)" fg:x="1251" fg:w="9"/><text x="35.5890%" y="110.50"></text></g><g><title>fromisoformat (parser.py:1684) (5 samples, 0.14%)</title><rect x="36.1864%" y="116" width="0.1412%" height="15" fill="rgb(226,81,46)" fg:x="1281" fg:w="5"/><text x="36.4364%" y="126.50"></text></g><g><title>_parse_isoformat_date (parser.py:267) (15 samples, 0.42%)</title><rect x="36.5537%" y="132" width="0.4237%" height="15" fill="rgb(247,70,30)" fg:x="1294" fg:w="15"/><text x="36.8037%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:268) (4 samples, 0.11%)</title><rect x="36.9774%" y="132" width="0.1130%" height="15" fill="rgb(212,68,19)" fg:x="1309" fg:w="4"/><text x="37.2274%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:271) (17 samples, 0.48%)</title><rect x="37.0904%" y="132" width="0.4802%" height="15" fill="rgb(240,187,13)" fg:x="1313" fg:w="17"/><text x="37.3404%" y="142.50"></text></g><g><title>_parse_isoformat_date (parser.py:276) (5 samples, 0.14%)</title><rect x="37.6554%" y="132" width="0.1412%" height="15" fill="rgb(223,113,26)" fg:x="1333" fg:w="5"/><text x="37.9054%" y="142.50"></text></g><g><title>fromisoformat (parser.py:1688) (53 samples, 1.50%)</title><rect x="36.3842%" y="116" width="1.4972%" height="15" fill="rgb(206,192,2)" fg:x="1288" fg:w="53"/><text x="36.6342%" y="126.50"></text></g><g><title>_parse_isoformat_time (parser.py:326) (15 samples, 0.42%)</title><rect x="38.4463%" y="132" width="0.4237%" height="15" fill="rgb(241,108,4)" fg:x="1361" fg:w="15"/><text x="38.6963%" y="142.50"></text></g><g><title>_parse_isoformat_time (parser.py:327) (10 samples, 0.28%)</title><rect x="38.8701%" y="132" width="0.2825%" height="15" fill="rgb(247,173,49)" fg:x="1376" fg:w="10"/><text x="39.1201%" y="142.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:284) (5 samples, 0.14%)</title><rect x="39.4915%" y="148" width="0.1412%" height="15" fill="rgb(224,114,35)" fg:x="1398" fg:w="5"/><text x="39.7415%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:286) (18 samples, 0.51%)</title><rect x="39.7175%" y="148" width="0.5085%" height="15" fill="rgb(245,159,27)" fg:x="1406" fg:w="18"/><text x="39.9675%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:287) (17 samples, 0.48%)</title><rect x="40.2260%" y="148" width="0.4802%" height="15" fill="rgb(245,172,44)" fg:x="1424" fg:w="17"/><text x="40.4760%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:290) (46 samples, 1.30%)</title><rect x="40.7062%" y="148" width="1.2994%" height="15" fill="rgb(236,23,11)" fg:x="1441" fg:w="46"/><text x="40.9562%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:292) (4 samples, 0.11%)</title><rect x="42.0056%" y="148" width="0.1130%" height="15" fill="rgb(205,117,38)" fg:x="1487" fg:w="4"/><text x="42.2556%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:293) (19 samples, 0.54%)</title><rect x="42.1186%" y="148" width="0.5367%" height="15" fill="rgb(237,72,25)" fg:x="1491" fg:w="19"/><text x="42.3686%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:295) (5 samples, 0.14%)</title><rect x="42.6554%" y="148" width="0.1412%" height="15" fill="rgb(244,70,9)" fg:x="1510" fg:w="5"/><text x="42.9054%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:298) (8 samples, 0.23%)</title><rect x="42.8249%" y="148" width="0.2260%" height="15" fill="rgb(217,125,39)" fg:x="1516" fg:w="8"/><text x="43.0749%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:301) (4 samples, 0.11%)</title><rect x="43.0508%" y="148" width="0.1130%" height="15" fill="rgb(235,36,10)" fg:x="1524" fg:w="4"/><text x="43.3008%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:329) (144 samples, 4.07%)</title><rect x="39.1525%" y="132" width="4.0678%" height="15" fill="rgb(251,123,47)" fg:x="1386" fg:w="144"/><text x="39.4025%" y="142.50">_par..</text></g><g><title>_parse_isoformat_time (parser.py:333) (4 samples, 0.11%)</title><rect x="43.3051%" y="132" width="0.1130%" height="15" fill="rgb(221,13,13)" fg:x="1533" fg:w="4"/><text x="43.5551%" y="142.50"></text></g><g><title>_parse_isoformat_time (parser.py:340) (4 samples, 0.11%)</title><rect x="43.4181%" y="132" width="0.1130%" height="15" fill="rgb(238,131,9)" fg:x="1537" fg:w="4"/><text x="43.6681%" y="142.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:286) (6 samples, 0.17%)</title><rect x="43.8136%" y="148" width="0.1695%" height="15" fill="rgb(211,50,8)" fg:x="1551" fg:w="6"/><text x="44.0636%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:290) (20 samples, 0.56%)</title><rect x="44.0113%" y="148" width="0.5650%" height="15" fill="rgb(245,182,24)" fg:x="1558" fg:w="20"/><text x="44.2613%" y="158.50"></text></g><g><title>_parse_hh_mm_ss_ff (parser.py:293) (17 samples, 0.48%)</title><rect x="44.6610%" y="148" width="0.4802%" height="15" fill="rgb(242,14,37)" fg:x="1581" fg:w="17"/><text x="44.9110%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:343) (64 samples, 1.81%)</title><rect x="43.5311%" y="132" width="1.8079%" height="15" fill="rgb(246,228,12)" fg:x="1541" fg:w="64"/><text x="43.7811%" y="142.50">_..</text></g><g><title>_parse_isoformat_time (parser.py:344) (40 samples, 1.13%)</title><rect x="45.3390%" y="132" width="1.1299%" height="15" fill="rgb(213,55,15)" fg:x="1605" fg:w="40"/><text x="45.5890%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (parser.py:344) (10 samples, 0.28%)</title><rect x="46.1864%" y="148" width="0.2825%" height="15" fill="rgb(209,9,3)" fg:x="1635" fg:w="10"/><text x="46.4364%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:347) (5 samples, 0.14%)</title><rect x="46.4689%" y="132" width="0.1412%" height="15" fill="rgb(230,59,30)" fg:x="1645" fg:w="5"/><text x="46.7189%" y="142.50"></text></g><g><title>__new__ (parser.py:473) (9 samples, 0.25%)</title><rect x="47.5989%" y="148" width="0.2542%" height="15" fill="rgb(209,121,21)" fg:x="1685" fg:w="9"/><text x="47.8489%" y="158.50"></text></g><g><title>__new__ (parser.py:478) (5 samples, 0.14%)</title><rect x="47.9096%" y="148" width="0.1412%" height="15" fill="rgb(220,109,13)" fg:x="1696" fg:w="5"/><text x="48.1596%" y="158.50"></text></g><g><title>__new__ (parser.py:488) (9 samples, 0.25%)</title><rect x="48.1073%" y="148" width="0.2542%" height="15" fill="rgb(232,18,1)" fg:x="1703" fg:w="9"/><text x="48.3573%" y="158.50"></text></g><g><title>__new__ (parser.py:489) (6 samples, 0.17%)</title><rect x="48.3616%" y="148" width="0.1695%" height="15" fill="rgb(215,41,42)" fg:x="1712" fg:w="6"/><text x="48.6116%" y="158.50"></text></g><g><title>__new__ (parser.py:491) (6 samples, 0.17%)</title><rect x="48.5876%" y="148" width="0.1695%" height="15" fill="rgb(224,123,36)" fg:x="1720" fg:w="6"/><text x="48.8376%" y="158.50"></text></g><g><title>__new__ (parser.py:504) (4 samples, 0.11%)</title><rect x="48.8418%" y="148" width="0.1130%" height="15" fill="rgb(240,125,3)" fg:x="1729" fg:w="4"/><text x="49.0918%" y="158.50"></text></g><g><title>__new__ (parser.py:507) (7 samples, 0.20%)</title><rect x="49.0395%" y="148" width="0.1977%" height="15" fill="rgb(205,98,50)" fg:x="1736" fg:w="7"/><text x="49.2895%" y="158.50"></text></g><g><title>__new__ (parser.py:525) (5 samples, 0.14%)</title><rect x="49.6328%" y="148" width="0.1412%" height="15" fill="rgb(205,185,37)" fg:x="1757" fg:w="5"/><text x="49.8828%" y="158.50"></text></g><g><title>__new__ (parser.py:527) (5 samples, 0.14%)</title><rect x="49.8588%" y="148" width="0.1412%" height="15" fill="rgb(238,207,15)" fg:x="1765" fg:w="5"/><text x="50.1088%" y="158.50"></text></g><g><title>__new__ (parser.py:530) (13 samples, 0.37%)</title><rect x="50.0847%" y="148" width="0.3672%" height="15" fill="rgb(213,199,42)" fg:x="1773" fg:w="13"/><text x="50.3347%" y="158.50"></text></g><g><title>__new__ (parser.py:533) (10 samples, 0.28%)</title><rect x="50.5650%" y="148" width="0.2825%" height="15" fill="rgb(235,201,11)" fg:x="1790" fg:w="10"/><text x="50.8150%" y="158.50"></text></g><g><title>__new__ (parser.py:534) (4 samples, 0.11%)</title><rect x="50.8475%" y="148" width="0.1130%" height="15" fill="rgb(207,46,11)" fg:x="1800" fg:w="4"/><text x="51.0975%" y="158.50"></text></g><g><title>__new__ (parser.py:537) (6 samples, 0.17%)</title><rect x="50.9605%" y="148" width="0.1695%" height="15" fill="rgb(241,35,35)" fg:x="1804" fg:w="6"/><text x="51.2105%" y="158.50"></text></g><g><title>__new__ (parser.py:543) (5 samples, 0.14%)</title><rect x="51.2147%" y="148" width="0.1412%" height="15" fill="rgb(243,32,47)" fg:x="1813" fg:w="5"/><text x="51.4647%" y="158.50"></text></g><g><title>__new__ (parser.py:544) (6 samples, 0.17%)</title><rect x="51.3559%" y="148" width="0.1695%" height="15" fill="rgb(247,202,23)" fg:x="1818" fg:w="6"/><text x="51.6059%" y="158.50"></text></g><g><title>__new__ (parser.py:549) (8 samples, 0.23%)</title><rect x="51.5819%" y="148" width="0.2260%" height="15" fill="rgb(219,102,11)" fg:x="1826" fg:w="8"/><text x="51.8319%" y="158.50"></text></g><g><title>__new__ (parser.py:551) (4 samples, 0.11%)</title><rect x="51.8362%" y="148" width="0.1130%" height="15" fill="rgb(243,110,44)" fg:x="1835" fg:w="4"/><text x="52.0862%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:349) (192 samples, 5.42%)</title><rect x="46.6102%" y="132" width="5.4237%" height="15" fill="rgb(222,74,54)" fg:x="1650" fg:w="192"/><text x="46.8602%" y="142.50">_parse_..</text></g><g><title>__new__ (parser.py:473) (5 samples, 0.14%)</title><rect x="53.1638%" y="164" width="0.1412%" height="15" fill="rgb(216,99,12)" fg:x="1882" fg:w="5"/><text x="53.4138%" y="174.50"></text></g><g><title>__new__ (parser.py:478) (5 samples, 0.14%)</title><rect x="53.3333%" y="164" width="0.1412%" height="15" fill="rgb(226,22,26)" fg:x="1888" fg:w="5"/><text x="53.5833%" y="174.50"></text></g><g><title>__new__ (parser.py:491) (4 samples, 0.11%)</title><rect x="53.7006%" y="164" width="0.1130%" height="15" fill="rgb(217,163,10)" fg:x="1901" fg:w="4"/><text x="53.9506%" y="174.50"></text></g><g><title>__new__ (parser.py:494) (6 samples, 0.17%)</title><rect x="53.8136%" y="164" width="0.1695%" height="15" fill="rgb(213,25,53)" fg:x="1905" fg:w="6"/><text x="54.0636%" y="174.50"></text></g><g><title>__new__ (parser.py:507) (11 samples, 0.31%)</title><rect x="54.2090%" y="164" width="0.3107%" height="15" fill="rgb(252,105,26)" fg:x="1919" fg:w="11"/><text x="54.4590%" y="174.50"></text></g><g><title>__new__ (parser.py:509) (5 samples, 0.14%)</title><rect x="54.5480%" y="164" width="0.1412%" height="15" fill="rgb(220,39,43)" fg:x="1931" fg:w="5"/><text x="54.7980%" y="174.50"></text></g><g><title>__new__ (parser.py:511) (5 samples, 0.14%)</title><rect x="54.7175%" y="164" width="0.1412%" height="15" fill="rgb(229,68,48)" fg:x="1937" fg:w="5"/><text x="54.9675%" y="174.50"></text></g><g><title>__new__ (parser.py:529) (4 samples, 0.11%)</title><rect x="55.2260%" y="164" width="0.1130%" height="15" fill="rgb(252,8,32)" fg:x="1955" fg:w="4"/><text x="55.4760%" y="174.50"></text></g><g><title>__new__ (parser.py:530) (5 samples, 0.14%)</title><rect x="55.3390%" y="164" width="0.1412%" height="15" fill="rgb(223,20,43)" fg:x="1959" fg:w="5"/><text x="55.5890%" y="174.50"></text></g><g><title>__new__ (parser.py:531) (4 samples, 0.11%)</title><rect x="55.4802%" y="164" width="0.1130%" height="15" fill="rgb(229,81,49)" fg:x="1964" fg:w="4"/><text x="55.7302%" y="174.50"></text></g><g><title>__new__ (parser.py:534) (5 samples, 0.14%)</title><rect x="55.7062%" y="164" width="0.1412%" height="15" fill="rgb(236,28,36)" fg:x="1972" fg:w="5"/><text x="55.9562%" y="174.50"></text></g><g><title>__new__ (parser.py:539) (8 samples, 0.23%)</title><rect x="55.9322%" y="164" width="0.2260%" height="15" fill="rgb(249,185,26)" fg:x="1980" fg:w="8"/><text x="56.1822%" y="174.50"></text></g><g><title>__new__ (parser.py:544) (5 samples, 0.14%)</title><rect x="56.2712%" y="164" width="0.1412%" height="15" fill="rgb(249,174,33)" fg:x="1992" fg:w="5"/><text x="56.5212%" y="174.50"></text></g><g><title>__new__ (parser.py:549) (12 samples, 0.34%)</title><rect x="56.4972%" y="164" width="0.3390%" height="15" fill="rgb(233,201,37)" fg:x="2000" fg:w="12"/><text x="56.7472%" y="174.50"></text></g><g><title>__mul__ (parser.py:648) (155 samples, 4.38%)</title><rect x="52.6836%" y="148" width="4.3785%" height="15" fill="rgb(221,78,26)" fg:x="1865" fg:w="155"/><text x="52.9336%" y="158.50">__mul..</text></g><g><title>__new__ (parser.py:2142) (7 samples, 0.20%)</title><rect x="57.1469%" y="148" width="0.1977%" height="15" fill="rgb(250,127,30)" fg:x="2023" fg:w="7"/><text x="57.3969%" y="158.50"></text></g><g><title>__new__ (parser.py:2144) (4 samples, 0.11%)</title><rect x="57.3446%" y="148" width="0.1130%" height="15" fill="rgb(230,49,44)" fg:x="2030" fg:w="4"/><text x="57.5946%" y="158.50"></text></g><g><title>__new__ (parser.py:2145) (9 samples, 0.25%)</title><rect x="57.4576%" y="148" width="0.2542%" height="15" fill="rgb(229,67,23)" fg:x="2034" fg:w="9"/><text x="57.7076%" y="158.50"></text></g><g><title>__le__ (parser.py:706) (10 samples, 0.28%)</title><rect x="58.1921%" y="164" width="0.2825%" height="15" fill="rgb(249,83,47)" fg:x="2060" fg:w="10"/><text x="58.4421%" y="174.50"></text></g><g><title>_cmp (parser.py:730) (5 samples, 0.14%)</title><rect x="58.7288%" y="180" width="0.1412%" height="15" fill="rgb(215,43,3)" fg:x="2079" fg:w="5"/><text x="58.9788%" y="190.50"></text></g><g><title>_cmp (parser.py:16) (10 samples, 0.28%)</title><rect x="59.4633%" y="196" width="0.2825%" height="15" fill="rgb(238,154,13)" fg:x="2105" fg:w="10"/><text x="59.7133%" y="206.50"></text></g><g><title>__new__ (parser.py:2150) (87 samples, 2.46%)</title><rect x="57.7401%" y="148" width="2.4576%" height="15" fill="rgb(219,56,2)" fg:x="2044" fg:w="87"/><text x="57.9901%" y="158.50">__..</text></g><g><title>__le__ (parser.py:707) (61 samples, 1.72%)</title><rect x="58.4746%" y="164" width="1.7232%" height="15" fill="rgb(233,0,4)" fg:x="2070" fg:w="61"/><text x="58.7246%" y="174.50"></text></g><g><title>_cmp (parser.py:731) (47 samples, 1.33%)</title><rect x="58.8701%" y="180" width="1.3277%" height="15" fill="rgb(235,30,7)" fg:x="2084" fg:w="47"/><text x="59.1201%" y="190.50"></text></g><g><title>_getstate (parser.py:746) (16 samples, 0.45%)</title><rect x="59.7458%" y="196" width="0.4520%" height="15" fill="rgb(250,79,13)" fg:x="2115" fg:w="16"/><text x="59.9958%" y="206.50"></text></g><g><title>_create (parser.py:2158) (11 samples, 0.31%)</title><rect x="60.4802%" y="164" width="0.3107%" height="15" fill="rgb(211,146,34)" fg:x="2141" fg:w="11"/><text x="60.7302%" y="174.50"></text></g><g><title>_create (parser.py:2159) (4 samples, 0.11%)</title><rect x="60.7910%" y="164" width="0.1130%" height="15" fill="rgb(228,22,38)" fg:x="2152" fg:w="4"/><text x="61.0410%" y="174.50"></text></g><g><title>_parse_isoformat_time (parser.py:352) (313 samples, 8.84%)</title><rect x="52.0904%" y="132" width="8.8418%" height="15" fill="rgb(235,168,5)" fg:x="1844" fg:w="313"/><text x="52.3404%" y="142.50">_parse_isofo..</text></g><g><title>__new__ (parser.py:2154) (26 samples, 0.73%)</title><rect x="60.1977%" y="148" width="0.7345%" height="15" fill="rgb(221,155,16)" fg:x="2131" fg:w="26"/><text x="60.4477%" y="158.50"></text></g><g><title>_parse_isoformat_time (parser.py:354) (9 samples, 0.25%)</title><rect x="60.9322%" y="132" width="0.2542%" height="15" fill="rgb(215,215,53)" fg:x="2157" fg:w="9"/><text x="61.1822%" y="142.50"></text></g><g><title>fromisoformat (parser.py:1694) (824 samples, 23.28%)</title><rect x="37.9379%" y="116" width="23.2768%" height="15" fill="rgb(223,4,10)" fg:x="1343" fg:w="824"/><text x="38.1879%" y="126.50">fromisoformat (parser.py:1694)</text></g><g><title>__new__ (parser.py:1532) (5 samples, 0.14%)</title><rect x="61.8644%" y="132" width="0.1412%" height="15" fill="rgb(234,103,6)" fg:x="2190" fg:w="5"/><text x="62.1144%" y="142.50"></text></g><g><title>_check_date_fields (parser.py:384) (5 samples, 0.14%)</title><rect x="62.2881%" y="148" width="0.1412%" height="15" fill="rgb(227,97,0)" fg:x="2205" fg:w="5"/><text x="62.5381%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:385) (6 samples, 0.17%)</title><rect x="62.4294%" y="148" width="0.1695%" height="15" fill="rgb(234,150,53)" fg:x="2210" fg:w="6"/><text x="62.6794%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:387) (8 samples, 0.23%)</title><rect x="62.5989%" y="148" width="0.2260%" height="15" fill="rgb(228,201,54)" fg:x="2216" fg:w="8"/><text x="62.8489%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:389) (4 samples, 0.11%)</title><rect x="62.8249%" y="148" width="0.1130%" height="15" fill="rgb(222,22,37)" fg:x="2224" fg:w="4"/><text x="63.0749%" y="158.50"></text></g><g><title>_days_in_month (parser.py:52) (5 samples, 0.14%)</title><rect x="63.1073%" y="164" width="0.1412%" height="15" fill="rgb(237,53,32)" fg:x="2234" fg:w="5"/><text x="63.3573%" y="174.50"></text></g><g><title>_check_date_fields (parser.py:391) (14 samples, 0.40%)</title><rect x="62.9379%" y="148" width="0.3955%" height="15" fill="rgb(233,25,53)" fg:x="2228" fg:w="14"/><text x="63.1879%" y="158.50"></text></g><g><title>_check_date_fields (parser.py:392) (5 samples, 0.14%)</title><rect x="63.3333%" y="148" width="0.1412%" height="15" fill="rgb(210,40,34)" fg:x="2242" fg:w="5"/><text x="63.5833%" y="158.50"></text></g><g><title>__new__ (parser.py:1548) (55 samples, 1.55%)</title><rect x="62.0056%" y="132" width="1.5537%" height="15" fill="rgb(241,220,44)" fg:x="2195" fg:w="55"/><text x="62.2556%" y="142.50"></text></g><g><title>_check_time_fields (parser.py:397) (4 samples, 0.11%)</title><rect x="63.8701%" y="148" width="0.1130%" height="15" fill="rgb(235,28,35)" fg:x="2261" fg:w="4"/><text x="64.1201%" y="158.50"></text></g><g><title>_check_time_fields (parser.py:398) (6 samples, 0.17%)</title><rect x="63.9831%" y="148" width="0.1695%" height="15" fill="rgb(210,56,17)" fg:x="2265" fg:w="6"/><text x="64.2331%" y="158.50"></text></g><g><title>_check_time_fields (parser.py:401) (6 samples, 0.17%)</title><rect x="64.2090%" y="148" width="0.1695%" height="15" fill="rgb(224,130,29)" fg:x="2273" fg:w="6"/><text x="64.4590%" y="158.50"></text></g><g><title>_check_time_fields (parser.py:403) (4 samples, 0.11%)</title><rect x="64.3785%" y="148" width="0.1130%" height="15" fill="rgb(235,212,8)" fg:x="2279" fg:w="4"/><text x="64.6285%" y="158.50"></text></g><g><title>__new__ (parser.py:1549) (43 samples, 1.21%)</title><rect x="63.5593%" y="132" width="1.2147%" height="15" fill="rgb(223,33,50)" fg:x="2250" fg:w="43"/><text x="63.8093%" y="142.50"></text></g><g><title>_check_time_fields (parser.py:411) (4 samples, 0.11%)</title><rect x="64.6610%" y="148" width="0.1130%" height="15" fill="rgb(219,149,13)" fg:x="2289" fg:w="4"/><text x="64.9110%" y="158.50"></text></g><g><title>__new__ (parser.py:1551) (7 samples, 0.20%)</title><rect x="64.8305%" y="132" width="0.1977%" height="15" fill="rgb(250,156,29)" fg:x="2295" fg:w="7"/><text x="65.0805%" y="142.50"></text></g><g><title>_check_tzinfo_arg (parser.py:414) (5 samples, 0.14%)</title><rect x="64.8870%" y="148" width="0.1412%" height="15" fill="rgb(216,193,19)" fg:x="2297" fg:w="5"/><text x="65.1370%" y="158.50"></text></g><g><title>__new__ (parser.py:1552) (11 samples, 0.31%)</title><rect x="65.0282%" y="132" width="0.3107%" height="15" fill="rgb(216,135,14)" fg:x="2302" fg:w="11"/><text x="65.2782%" y="142.50"></text></g><g><title>__new__ (parser.py:1553) (7 samples, 0.20%)</title><rect x="65.3390%" y="132" width="0.1977%" height="15" fill="rgb(241,47,5)" fg:x="2313" fg:w="7"/><text x="65.5890%" y="142.50"></text></g><g><title>__new__ (parser.py:1554) (4 samples, 0.11%)</title><rect x="65.5367%" y="132" width="0.1130%" height="15" fill="rgb(233,42,35)" fg:x="2320" fg:w="4"/><text x="65.7867%" y="142.50"></text></g><g><title>__new__ (parser.py:1558) (4 samples, 0.11%)</title><rect x="65.8757%" y="132" width="0.1130%" height="15" fill="rgb(231,13,6)" fg:x="2332" fg:w="4"/><text x="66.1257%" y="142.50"></text></g><g><title>__new__ (parser.py:1559) (4 samples, 0.11%)</title><rect x="65.9887%" y="132" width="0.1130%" height="15" fill="rgb(207,181,40)" fg:x="2336" fg:w="4"/><text x="66.2387%" y="142.50"></text></g><g><title>isLessThan (logEntry.py:29) (1,083 samples, 30.59%)</title><rect x="35.5932%" y="100" width="30.5932%" height="15" fill="rgb(254,173,49)" fg:x="1260" fg:w="1083"/><text x="35.8432%" y="110.50">isLessThan (logEntry.py:29)</text></g><g><title>fromisoformat (parser.py:1700) (176 samples, 4.97%)</title><rect x="61.2147%" y="116" width="4.9718%" height="15" fill="rgb(221,1,38)" fg:x="2167" fg:w="176"/><text x="61.4647%" y="126.50">fromis..</text></g><g><title>_cmp (parser.py:1985) (4 samples, 0.11%)</title><rect x="66.9492%" y="132" width="0.1130%" height="15" fill="rgb(206,124,46)" fg:x="2370" fg:w="4"/><text x="67.1992%" y="142.50"></text></g><g><title>utcoffset (parser.py:1909) (6 samples, 0.17%)</title><rect x="67.5141%" y="148" width="0.1695%" height="15" fill="rgb(249,21,11)" fg:x="2390" fg:w="6"/><text x="67.7641%" y="158.50"></text></g><g><title>utcoffset (parser.py:1911) (5 samples, 0.14%)</title><rect x="67.6836%" y="148" width="0.1412%" height="15" fill="rgb(222,201,40)" fg:x="2396" fg:w="5"/><text x="67.9336%" y="158.50"></text></g><g><title>__lt__ (parser.py:712) (8 samples, 0.23%)</title><rect x="69.4915%" y="180" width="0.2260%" height="15" fill="rgb(235,61,29)" fg:x="2460" fg:w="8"/><text x="69.7415%" y="190.50"></text></g><g><title>_cmp (parser.py:730) (4 samples, 0.11%)</title><rect x="70.1130%" y="196" width="0.1130%" height="15" fill="rgb(219,207,3)" fg:x="2482" fg:w="4"/><text x="70.3630%" y="206.50"></text></g><g><title>_cmp (parser.py:16) (7 samples, 0.20%)</title><rect x="71.1299%" y="212" width="0.1977%" height="15" fill="rgb(222,56,46)" fg:x="2518" fg:w="7"/><text x="71.3799%" y="222.50"></text></g><g><title>__lt__ (parser.py:713) (77 samples, 2.18%)</title><rect x="69.7175%" y="180" width="2.1751%" height="15" fill="rgb(239,76,54)" fg:x="2468" fg:w="77"/><text x="69.9675%" y="190.50">_..</text></g><g><title>_cmp (parser.py:731) (59 samples, 1.67%)</title><rect x="70.2260%" y="196" width="1.6667%" height="15" fill="rgb(231,124,27)" fg:x="2486" fg:w="59"/><text x="70.4760%" y="206.50"></text></g><g><title>_getstate (parser.py:746) (20 samples, 0.56%)</title><rect x="71.3277%" y="212" width="0.5650%" height="15" fill="rgb(249,195,6)" fg:x="2525" fg:w="20"/><text x="71.5777%" y="222.50"></text></g><g><title>__new__ (parser.py:472) (4 samples, 0.11%)</title><rect x="72.2599%" y="196" width="0.1130%" height="15" fill="rgb(237,174,47)" fg:x="2558" fg:w="4"/><text x="72.5099%" y="206.50"></text></g><g><title>__new__ (parser.py:473) (8 samples, 0.23%)</title><rect x="72.3729%" y="196" width="0.2260%" height="15" fill="rgb(206,201,31)" fg:x="2562" fg:w="8"/><text x="72.6229%" y="206.50"></text></g><g><title>__new__ (parser.py:478) (13 samples, 0.37%)</title><rect x="72.5989%" y="196" width="0.3672%" height="15" fill="rgb(231,57,52)" fg:x="2570" fg:w="13"/><text x="72.8489%" y="206.50"></text></g><g><title>__new__ (parser.py:504) (6 samples, 0.17%)</title><rect x="73.2203%" y="196" width="0.1695%" height="15" fill="rgb(248,177,22)" fg:x="2592" fg:w="6"/><text x="73.4703%" y="206.50"></text></g><g><title>__new__ (parser.py:509) (4 samples, 0.11%)</title><rect x="73.4463%" y="196" width="0.1130%" height="15" fill="rgb(215,211,37)" fg:x="2600" fg:w="4"/><text x="73.6963%" y="206.50"></text></g><g><title>__new__ (parser.py:515) (4 samples, 0.11%)</title><rect x="73.7571%" y="196" width="0.1130%" height="15" fill="rgb(241,128,51)" fg:x="2611" fg:w="4"/><text x="74.0071%" y="206.50"></text></g><g><title>__new__ (parser.py:527) (4 samples, 0.11%)</title><rect x="73.9831%" y="196" width="0.1130%" height="15" fill="rgb(227,165,31)" fg:x="2619" fg:w="4"/><text x="74.2331%" y="206.50"></text></g><g><title>__new__ (parser.py:530) (8 samples, 0.23%)</title><rect x="74.0960%" y="196" width="0.2260%" height="15" fill="rgb(228,167,24)" fg:x="2623" fg:w="8"/><text x="74.3460%" y="206.50"></text></g><g><title>__new__ (parser.py:533) (4 samples, 0.11%)</title><rect x="74.4350%" y="196" width="0.1130%" height="15" fill="rgb(228,143,12)" fg:x="2635" fg:w="4"/><text x="74.6850%" y="206.50"></text></g><g><title>__new__ (parser.py:539) (4 samples, 0.11%)</title><rect x="74.8023%" y="196" width="0.1130%" height="15" fill="rgb(249,149,8)" fg:x="2648" fg:w="4"/><text x="75.0523%" y="206.50"></text></g><g><title>__new__ (parser.py:543) (8 samples, 0.23%)</title><rect x="75.0000%" y="196" width="0.2260%" height="15" fill="rgb(243,35,44)" fg:x="2655" fg:w="8"/><text x="75.2500%" y="206.50"></text></g><g><title>__new__ (parser.py:544) (6 samples, 0.17%)</title><rect x="75.2260%" y="196" width="0.1695%" height="15" fill="rgb(246,89,9)" fg:x="2663" fg:w="6"/><text x="75.4760%" y="206.50"></text></g><g><title>__new__ (parser.py:549) (10 samples, 0.28%)</title><rect x="75.4520%" y="196" width="0.2825%" height="15" fill="rgb(233,213,13)" fg:x="2671" fg:w="10"/><text x="75.7020%" y="206.50"></text></g><g><title>__new__ (parser.py:551) (4 samples, 0.11%)</title><rect x="75.7910%" y="196" width="0.1130%" height="15" fill="rgb(233,141,41)" fg:x="2683" fg:w="4"/><text x="76.0410%" y="206.50"></text></g><g><title>__neg__ (parser.py:631) (143 samples, 4.04%)</title><rect x="71.9209%" y="180" width="4.0395%" height="15" fill="rgb(239,167,4)" fg:x="2546" fg:w="143"/><text x="72.1709%" y="190.50">__ne..</text></g><g><title>__new__ (parser.py:472) (8 samples, 0.23%)</title><rect x="76.0734%" y="180" width="0.2260%" height="15" fill="rgb(209,217,16)" fg:x="2693" fg:w="8"/><text x="76.3234%" y="190.50"></text></g><g><title>__new__ (parser.py:473) (12 samples, 0.34%)</title><rect x="76.2994%" y="180" width="0.3390%" height="15" fill="rgb(219,88,35)" fg:x="2701" fg:w="12"/><text x="76.5494%" y="190.50"></text></g><g><title>__new__ (parser.py:474) (4 samples, 0.11%)</title><rect x="76.6384%" y="180" width="0.1130%" height="15" fill="rgb(220,193,23)" fg:x="2713" fg:w="4"/><text x="76.8884%" y="190.50"></text></g><g><title>__new__ (parser.py:478) (7 samples, 0.20%)</title><rect x="76.7514%" y="180" width="0.1977%" height="15" fill="rgb(230,90,52)" fg:x="2717" fg:w="7"/><text x="77.0014%" y="190.50"></text></g><g><title>__new__ (parser.py:488) (4 samples, 0.11%)</title><rect x="76.9774%" y="180" width="0.1130%" height="15" fill="rgb(252,106,19)" fg:x="2725" fg:w="4"/><text x="77.2274%" y="190.50"></text></g><g><title>__new__ (parser.py:489) (6 samples, 0.17%)</title><rect x="77.0904%" y="180" width="0.1695%" height="15" fill="rgb(206,74,20)" fg:x="2729" fg:w="6"/><text x="77.3404%" y="190.50"></text></g><g><title>__new__ (parser.py:490) (6 samples, 0.17%)</title><rect x="77.2599%" y="180" width="0.1695%" height="15" fill="rgb(230,138,44)" fg:x="2735" fg:w="6"/><text x="77.5099%" y="190.50"></text></g><g><title>__new__ (parser.py:491) (5 samples, 0.14%)</title><rect x="77.4294%" y="180" width="0.1412%" height="15" fill="rgb(235,182,43)" fg:x="2741" fg:w="5"/><text x="77.6794%" y="190.50"></text></g><g><title>__new__ (parser.py:494) (8 samples, 0.23%)</title><rect x="77.5706%" y="180" width="0.2260%" height="15" fill="rgb(242,16,51)" fg:x="2746" fg:w="8"/><text x="77.8206%" y="190.50"></text></g><g><title>__new__ (parser.py:503) (5 samples, 0.14%)</title><rect x="77.8531%" y="180" width="0.1412%" height="15" fill="rgb(248,9,4)" fg:x="2756" fg:w="5"/><text x="78.1031%" y="190.50"></text></g><g><title>__new__ (parser.py:507) (6 samples, 0.17%)</title><rect x="78.0791%" y="180" width="0.1695%" height="15" fill="rgb(210,31,22)" fg:x="2764" fg:w="6"/><text x="78.3291%" y="190.50"></text></g><g><title>__new__ (parser.py:509) (11 samples, 0.31%)</title><rect x="78.2768%" y="180" width="0.3107%" height="15" fill="rgb(239,54,39)" fg:x="2771" fg:w="11"/><text x="78.5268%" y="190.50"></text></g><g><title>__new__ (parser.py:510) (6 samples, 0.17%)</title><rect x="78.5876%" y="180" width="0.1695%" height="15" fill="rgb(230,99,41)" fg:x="2782" fg:w="6"/><text x="78.8376%" y="190.50"></text></g><g><title>__new__ (parser.py:511) (13 samples, 0.37%)</title><rect x="78.7571%" y="180" width="0.3672%" height="15" fill="rgb(253,106,12)" fg:x="2788" fg:w="13"/><text x="79.0071%" y="190.50"></text></g><g><title>__new__ (parser.py:514) (5 samples, 0.14%)</title><rect x="79.1243%" y="180" width="0.1412%" height="15" fill="rgb(213,46,41)" fg:x="2801" fg:w="5"/><text x="79.3743%" y="190.50"></text></g><g><title>__new__ (parser.py:515) (5 samples, 0.14%)</title><rect x="79.2655%" y="180" width="0.1412%" height="15" fill="rgb(215,133,35)" fg:x="2806" fg:w="5"/><text x="79.5155%" y="190.50"></text></g><g><title>__new__ (parser.py:518) (4 samples, 0.11%)</title><rect x="79.4068%" y="180" width="0.1130%" height="15" fill="rgb(213,28,5)" fg:x="2811" fg:w="4"/><text x="79.6568%" y="190.50"></text></g><g><title>__new__ (parser.py:526) (4 samples, 0.11%)</title><rect x="79.5763%" y="180" width="0.1130%" height="15" fill="rgb(215,77,49)" fg:x="2817" fg:w="4"/><text x="79.8263%" y="190.50"></text></g><g><title>__new__ (parser.py:528) (4 samples, 0.11%)</title><rect x="79.7175%" y="180" width="0.1130%" height="15" fill="rgb(248,100,22)" fg:x="2822" fg:w="4"/><text x="79.9675%" y="190.50"></text></g><g><title>__new__ (parser.py:530) (15 samples, 0.42%)</title><rect x="79.9153%" y="180" width="0.4237%" height="15" fill="rgb(208,67,9)" fg:x="2829" fg:w="15"/><text x="80.1653%" y="190.50"></text></g><g><title>__new__ (parser.py:532) (7 samples, 0.20%)</title><rect x="80.4237%" y="180" width="0.1977%" height="15" fill="rgb(219,133,21)" fg:x="2847" fg:w="7"/><text x="80.6737%" y="190.50"></text></g><g><title>__new__ (parser.py:534) (10 samples, 0.28%)</title><rect x="80.6497%" y="180" width="0.2825%" height="15" fill="rgb(246,46,29)" fg:x="2855" fg:w="10"/><text x="80.8997%" y="190.50"></text></g><g><title>__new__ (parser.py:537) (5 samples, 0.14%)</title><rect x="80.9322%" y="180" width="0.1412%" height="15" fill="rgb(246,185,52)" fg:x="2865" fg:w="5"/><text x="81.1822%" y="190.50"></text></g><g><title>__new__ (parser.py:538) (6 samples, 0.17%)</title><rect x="81.0734%" y="180" width="0.1695%" height="15" fill="rgb(252,136,11)" fg:x="2870" fg:w="6"/><text x="81.3234%" y="190.50"></text></g><g><title>__new__ (parser.py:539) (4 samples, 0.11%)</title><rect x="81.2429%" y="180" width="0.1130%" height="15" fill="rgb(219,138,53)" fg:x="2876" fg:w="4"/><text x="81.4929%" y="190.50"></text></g><g><title>__new__ (parser.py:542) (5 samples, 0.14%)</title><rect x="81.4124%" y="180" width="0.1412%" height="15" fill="rgb(211,51,23)" fg:x="2882" fg:w="5"/><text x="81.6624%" y="190.50"></text></g><g><title>__new__ (parser.py:543) (13 samples, 0.37%)</title><rect x="81.5537%" y="180" width="0.3672%" height="15" fill="rgb(247,221,28)" fg:x="2887" fg:w="13"/><text x="81.8037%" y="190.50"></text></g><g><title>__new__ (parser.py:544) (14 samples, 0.40%)</title><rect x="81.9209%" y="180" width="0.3955%" height="15" fill="rgb(251,222,45)" fg:x="2900" fg:w="14"/><text x="82.1709%" y="190.50"></text></g><g><title>__new__ (parser.py:546) (7 samples, 0.20%)</title><rect x="82.3164%" y="180" width="0.1977%" height="15" fill="rgb(217,162,53)" fg:x="2914" fg:w="7"/><text x="82.5664%" y="190.50"></text></g><g><title>__new__ (parser.py:549) (17 samples, 0.48%)</title><rect x="82.5141%" y="180" width="0.4802%" height="15" fill="rgb(229,93,14)" fg:x="2921" fg:w="17"/><text x="82.7641%" y="190.50"></text></g><g><title>__new__ (parser.py:550) (4 samples, 0.11%)</title><rect x="82.9944%" y="180" width="0.1130%" height="15" fill="rgb(209,67,49)" fg:x="2938" fg:w="4"/><text x="83.2444%" y="190.50"></text></g><g><title>_check_utc_offset (parser.py:378) (538 samples, 15.20%)</title><rect x="68.1073%" y="164" width="15.1977%" height="15" fill="rgb(213,87,29)" fg:x="2411" fg:w="538"/><text x="68.3573%" y="174.50">_check_utc_offset (pars..</text></g><g><title>_cmp (parser.py:1992) (573 samples, 16.19%)</title><rect x="67.1469%" y="132" width="16.1864%" height="15" fill="rgb(205,151,52)" fg:x="2377" fg:w="573"/><text x="67.3969%" y="142.50">_cmp (parser.py:1992)</text></g><g><title>utcoffset (parser.py:1912) (549 samples, 15.51%)</title><rect x="67.8249%" y="148" width="15.5085%" height="15" fill="rgb(253,215,39)" fg:x="2401" fg:w="549"/><text x="68.0749%" y="158.50">utcoffset (parser.py:191..</text></g><g><title>utcoffset (parser.py:1909) (5 samples, 0.14%)</title><rect x="83.4746%" y="148" width="0.1412%" height="15" fill="rgb(221,220,41)" fg:x="2955" fg:w="5"/><text x="83.7246%" y="158.50"></text></g><g><title>utcoffset (parser.py:1911) (5 samples, 0.14%)</title><rect x="83.6158%" y="148" width="0.1412%" height="15" fill="rgb(218,133,21)" fg:x="2960" fg:w="5"/><text x="83.8658%" y="158.50"></text></g><g><title>__lt__ (parser.py:712) (7 samples, 0.20%)</title><rect x="84.8305%" y="180" width="0.1977%" height="15" fill="rgb(221,193,43)" fg:x="3003" fg:w="7"/><text x="85.0805%" y="190.50"></text></g><g><title>_cmp (parser.py:16) (17 samples, 0.48%)</title><rect x="85.7345%" y="212" width="0.4802%" height="15" fill="rgb(240,128,52)" fg:x="3035" fg:w="17"/><text x="85.9845%" y="222.50"></text></g><g><title>__lt__ (parser.py:713) (65 samples, 1.84%)</title><rect x="85.0282%" y="180" width="1.8362%" height="15" fill="rgb(253,114,12)" fg:x="3010" fg:w="65"/><text x="85.2782%" y="190.50">_..</text></g><g><title>_cmp (parser.py:731) (53 samples, 1.50%)</title><rect x="85.3672%" y="196" width="1.4972%" height="15" fill="rgb(215,223,47)" fg:x="3022" fg:w="53"/><text x="85.6172%" y="206.50"></text></g><g><title>_getstate (parser.py:746) (22 samples, 0.62%)</title><rect x="86.2429%" y="212" width="0.6215%" height="15" fill="rgb(248,225,23)" fg:x="3053" fg:w="22"/><text x="86.4929%" y="222.50"></text></g><g><title>__new__ (parser.py:473) (4 samples, 0.11%)</title><rect x="87.2599%" y="196" width="0.1130%" height="15" fill="rgb(250,108,0)" fg:x="3089" fg:w="4"/><text x="87.5099%" y="206.50"></text></g><g><title>__new__ (parser.py:509) (4 samples, 0.11%)</title><rect x="88.0226%" y="196" width="0.1130%" height="15" fill="rgb(228,208,7)" fg:x="3116" fg:w="4"/><text x="88.2726%" y="206.50"></text></g><g><title>__new__ (parser.py:511) (4 samples, 0.11%)</title><rect x="88.1921%" y="196" width="0.1130%" height="15" fill="rgb(244,45,10)" fg:x="3122" fg:w="4"/><text x="88.4421%" y="206.50"></text></g><g><title>__new__ (parser.py:526) (6 samples, 0.17%)</title><rect x="88.4463%" y="196" width="0.1695%" height="15" fill="rgb(207,125,25)" fg:x="3131" fg:w="6"/><text x="88.6963%" y="206.50"></text></g><g><title>__new__ (parser.py:530) (12 samples, 0.34%)</title><rect x="88.7571%" y="196" width="0.3390%" height="15" fill="rgb(210,195,18)" fg:x="3142" fg:w="12"/><text x="89.0071%" y="206.50"></text></g><g><title>__new__ (parser.py:533) (4 samples, 0.11%)</title><rect x="89.1525%" y="196" width="0.1130%" height="15" fill="rgb(249,80,12)" fg:x="3156" fg:w="4"/><text x="89.4025%" y="206.50"></text></g><g><title>__new__ (parser.py:546) (6 samples, 0.17%)</title><rect x="89.7175%" y="196" width="0.1695%" height="15" fill="rgb(221,65,9)" fg:x="3176" fg:w="6"/><text x="89.9675%" y="206.50"></text></g><g><title>__new__ (parser.py:549) (5 samples, 0.14%)</title><rect x="89.8870%" y="196" width="0.1412%" height="15" fill="rgb(235,49,36)" fg:x="3182" fg:w="5"/><text x="90.1370%" y="206.50"></text></g><g><title>__neg__ (parser.py:631) (121 samples, 3.42%)</title><rect x="86.8644%" y="180" width="3.4181%" height="15" fill="rgb(225,32,20)" fg:x="3075" fg:w="121"/><text x="87.1144%" y="190.50">__n..</text></g><g><title>__new__ (parser.py:553) (4 samples, 0.11%)</title><rect x="90.1695%" y="196" width="0.1130%" height="15" fill="rgb(215,141,46)" fg:x="3192" fg:w="4"/><text x="90.4195%" y="206.50"></text></g><g><title>__new__ (parser.py:472) (4 samples, 0.11%)</title><rect x="90.5085%" y="180" width="0.1130%" height="15" fill="rgb(250,160,47)" fg:x="3204" fg:w="4"/><text x="90.7585%" y="190.50"></text></g><g><title>__new__ (parser.py:473) (4 samples, 0.11%)</title><rect x="90.6215%" y="180" width="0.1130%" height="15" fill="rgb(216,222,40)" fg:x="3208" fg:w="4"/><text x="90.8715%" y="190.50"></text></g><g><title>__new__ (parser.py:478) (9 samples, 0.25%)</title><rect x="90.7910%" y="180" width="0.2542%" height="15" fill="rgb(234,217,39)" fg:x="3214" fg:w="9"/><text x="91.0410%" y="190.50"></text></g><g><title>__new__ (parser.py:489) (11 samples, 0.31%)</title><rect x="91.1864%" y="180" width="0.3107%" height="15" fill="rgb(207,178,40)" fg:x="3228" fg:w="11"/><text x="91.4364%" y="190.50"></text></g><g><title>__new__ (parser.py:490) (4 samples, 0.11%)</title><rect x="91.4972%" y="180" width="0.1130%" height="15" fill="rgb(221,136,13)" fg:x="3239" fg:w="4"/><text x="91.7472%" y="190.50"></text></g><g><title>__new__ (parser.py:491) (7 samples, 0.20%)</title><rect x="91.6102%" y="180" width="0.1977%" height="15" fill="rgb(249,199,10)" fg:x="3243" fg:w="7"/><text x="91.8602%" y="190.50"></text></g><g><title>__new__ (parser.py:494) (4 samples, 0.11%)</title><rect x="91.8079%" y="180" width="0.1130%" height="15" fill="rgb(249,222,13)" fg:x="3250" fg:w="4"/><text x="92.0579%" y="190.50"></text></g><g><title>__new__ (parser.py:503) (6 samples, 0.17%)</title><rect x="91.9209%" y="180" width="0.1695%" height="15" fill="rgb(244,185,38)" fg:x="3254" fg:w="6"/><text x="92.1709%" y="190.50"></text></g><g><title>__new__ (parser.py:504) (10 samples, 0.28%)</title><rect x="92.0904%" y="180" width="0.2825%" height="15" fill="rgb(236,202,9)" fg:x="3260" fg:w="10"/><text x="92.3404%" y="190.50"></text></g><g><title>__new__ (parser.py:506) (5 samples, 0.14%)</title><rect x="92.3729%" y="180" width="0.1412%" height="15" fill="rgb(250,229,37)" fg:x="3270" fg:w="5"/><text x="92.6229%" y="190.50"></text></g><g><title>__new__ (parser.py:507) (5 samples, 0.14%)</title><rect x="92.5141%" y="180" width="0.1412%" height="15" fill="rgb(206,174,23)" fg:x="3275" fg:w="5"/><text x="92.7641%" y="190.50"></text></g><g><title>__new__ (parser.py:509) (9 samples, 0.25%)</title><rect x="92.7401%" y="180" width="0.2542%" height="15" fill="rgb(211,33,43)" fg:x="3283" fg:w="9"/><text x="92.9901%" y="190.50"></text></g><g><title>__new__ (parser.py:510) (4 samples, 0.11%)</title><rect x="92.9944%" y="180" width="0.1130%" height="15" fill="rgb(245,58,50)" fg:x="3292" fg:w="4"/><text x="93.2444%" y="190.50"></text></g><g><title>__new__ (parser.py:515) (10 samples, 0.28%)</title><rect x="93.2486%" y="180" width="0.2825%" height="15" fill="rgb(244,68,36)" fg:x="3301" fg:w="10"/><text x="93.4986%" y="190.50"></text></g><g><title>__new__ (parser.py:518) (6 samples, 0.17%)</title><rect x="93.5311%" y="180" width="0.1695%" height="15" fill="rgb(232,229,15)" fg:x="3311" fg:w="6"/><text x="93.7811%" y="190.50"></text></g><g><title>__new__ (parser.py:525) (5 samples, 0.14%)</title><rect x="93.7006%" y="180" width="0.1412%" height="15" fill="rgb(254,30,23)" fg:x="3317" fg:w="5"/><text x="93.9506%" y="190.50"></text></g><g><title>__new__ (parser.py:526) (6 samples, 0.17%)</title><rect x="93.8418%" y="180" width="0.1695%" height="15" fill="rgb(235,160,14)" fg:x="3322" fg:w="6"/><text x="94.0918%" y="190.50"></text></g><g><title>__new__ (parser.py:527) (7 samples, 0.20%)</title><rect x="94.0113%" y="180" width="0.1977%" height="15" fill="rgb(212,155,44)" fg:x="3328" fg:w="7"/><text x="94.2613%" y="190.50"></text></g><g><title>__new__ (parser.py:528) (4 samples, 0.11%)</title><rect x="94.2090%" y="180" width="0.1130%" height="15" fill="rgb(226,2,50)" fg:x="3335" fg:w="4"/><text x="94.4590%" y="190.50"></text></g><g><title>__new__ (parser.py:529) (8 samples, 0.23%)</title><rect x="94.3220%" y="180" width="0.2260%" height="15" fill="rgb(234,177,6)" fg:x="3339" fg:w="8"/><text x="94.5720%" y="190.50"></text></g><g><title>__new__ (parser.py:530) (10 samples, 0.28%)</title><rect x="94.5480%" y="180" width="0.2825%" height="15" fill="rgb(217,24,9)" fg:x="3347" fg:w="10"/><text x="94.7980%" y="190.50"></text></g><g><title>__new__ (parser.py:531) (6 samples, 0.17%)</title><rect x="94.8305%" y="180" width="0.1695%" height="15" fill="rgb(220,13,46)" fg:x="3357" fg:w="6"/><text x="95.0805%" y="190.50"></text></g><g><title>__new__ (parser.py:534) (4 samples, 0.11%)</title><rect x="95.1695%" y="180" width="0.1130%" height="15" fill="rgb(239,221,27)" fg:x="3369" fg:w="4"/><text x="95.4195%" y="190.50"></text></g><g><title>__new__ (parser.py:537) (5 samples, 0.14%)</title><rect x="95.2825%" y="180" width="0.1412%" height="15" fill="rgb(222,198,25)" fg:x="3373" fg:w="5"/><text x="95.5325%" y="190.50"></text></g><g><title>__new__ (parser.py:540) (4 samples, 0.11%)</title><rect x="95.5932%" y="180" width="0.1130%" height="15" fill="rgb(211,99,13)" fg:x="3384" fg:w="4"/><text x="95.8432%" y="190.50"></text></g><g><title>__new__ (parser.py:542) (4 samples, 0.11%)</title><rect x="95.7062%" y="180" width="0.1130%" height="15" fill="rgb(232,111,31)" fg:x="3388" fg:w="4"/><text x="95.9562%" y="190.50"></text></g><g><title>__new__ (parser.py:543) (7 samples, 0.20%)</title><rect x="95.8192%" y="180" width="0.1977%" height="15" fill="rgb(245,82,37)" fg:x="3392" fg:w="7"/><text x="96.0692%" y="190.50"></text></g><g><title>__new__ (parser.py:544) (9 samples, 0.25%)</title><rect x="96.0169%" y="180" width="0.2542%" height="15" fill="rgb(227,149,46)" fg:x="3399" fg:w="9"/><text x="96.2669%" y="190.50"></text></g><g><title>__new__ (parser.py:546) (7 samples, 0.20%)</title><rect x="96.2712%" y="180" width="0.1977%" height="15" fill="rgb(218,36,50)" fg:x="3408" fg:w="7"/><text x="96.5212%" y="190.50"></text></g><g><title>__new__ (parser.py:549) (19 samples, 0.54%)</title><rect x="96.4689%" y="180" width="0.5367%" height="15" fill="rgb(226,80,48)" fg:x="3415" fg:w="19"/><text x="96.7189%" y="190.50"></text></g><g><title>__new__ (parser.py:551) (4 samples, 0.11%)</title><rect x="97.0904%" y="180" width="0.1130%" height="15" fill="rgb(238,224,15)" fg:x="3437" fg:w="4"/><text x="97.3404%" y="190.50"></text></g><g><title>__new__ (parser.py:552) (7 samples, 0.20%)</title><rect x="97.2034%" y="180" width="0.1977%" height="15" fill="rgb(241,136,10)" fg:x="3441" fg:w="7"/><text x="97.4534%" y="190.50"></text></g><g><title>_check_utc_offset (parser.py:378) (480 samples, 13.56%)</title><rect x="83.9266%" y="164" width="13.5593%" height="15" fill="rgb(208,32,45)" fg:x="2971" fg:w="480"/><text x="84.1766%" y="174.50">_check_utc_offset (p..</text></g><g><title>_cmp (parser.py:1993) (502 samples, 14.18%)</title><rect x="83.3333%" y="132" width="14.1808%" height="15" fill="rgb(207,135,9)" fg:x="2950" fg:w="502"/><text x="83.5833%" y="142.50">_cmp (parser.py:1993)</text></g><g><title>utcoffset (parser.py:1912) (487 samples, 13.76%)</title><rect x="83.7571%" y="148" width="13.7571%" height="15" fill="rgb(206,86,44)" fg:x="2965" fg:w="487"/><text x="84.0071%" y="158.50">utcoffset (parser.py:..</text></g><g><title>_cmp (parser.py:730) (5 samples, 0.14%)</title><rect x="97.8249%" y="164" width="0.1412%" height="15" fill="rgb(245,177,15)" fg:x="3463" fg:w="5"/><text x="98.0749%" y="174.50"></text></g><g><title>_cmp (parser.py:16) (5 samples, 0.14%)</title><rect x="98.1638%" y="180" width="0.1412%" height="15" fill="rgb(206,64,50)" fg:x="3475" fg:w="5"/><text x="98.4138%" y="190.50"></text></g><g><title>_cmp (parser.py:2000) (47 samples, 1.33%)</title><rect x="97.5141%" y="132" width="1.3277%" height="15" fill="rgb(234,36,40)" fg:x="3452" fg:w="47"/><text x="97.7641%" y="142.50"></text></g><g><title>__eq__ (parser.py:701) (36 samples, 1.02%)</title><rect x="97.8249%" y="148" width="1.0169%" height="15" fill="rgb(213,64,8)" fg:x="3463" fg:w="36"/><text x="98.0749%" y="158.50"></text></g><g><title>_cmp (parser.py:731) (31 samples, 0.88%)</title><rect x="97.9661%" y="164" width="0.8757%" height="15" fill="rgb(210,75,36)" fg:x="3468" fg:w="31"/><text x="98.2161%" y="174.50"></text></g><g><title>_getstate (parser.py:746) (18 samples, 0.51%)</title><rect x="98.3333%" y="180" width="0.5085%" height="15" fill="rgb(229,88,21)" fg:x="3481" fg:w="18"/><text x="98.5833%" y="190.50"></text></g><g><title>_cmp (parser.py:2003) (15 samples, 0.42%)</title><rect x="98.8701%" y="132" width="0.4237%" height="15" fill="rgb(252,204,47)" fg:x="3500" fg:w="15"/><text x="99.1201%" y="142.50"></text></g><g><title>_cmp (parser.py:16) (8 samples, 0.23%)</title><rect x="99.0678%" y="148" width="0.2260%" height="15" fill="rgb(208,77,27)" fg:x="3507" fg:w="8"/><text x="99.3178%" y="158.50"></text></g><g><title>insertionSortExpensive (sorts.py:12) (3,523 samples, 99.52%)</title><rect x="0.0000%" y="84" width="99.5198%" height="15" fill="rgb(221,76,26)" fg:x="0" fg:w="3523"/><text x="0.2500%" y="94.50">insertionSortExpensive (sorts.py:12)</text></g><g><title>isLessThan (logEntry.py:30) (1,180 samples, 33.33%)</title><rect x="66.1864%" y="100" width="33.3333%" height="15" fill="rgb(225,139,18)" fg:x="2343" fg:w="1180"/><text x="66.4364%" y="110.50">isLessThan (logEntry.py:30)</text></g><g><title>__lt__ (parser.py:1961) (1,170 samples, 33.05%)</title><rect x="66.4689%" y="116" width="33.0508%" height="15" fill="rgb(230,137,11)" fg:x="2353" fg:w="1170"/><text x="66.7189%" y="126.50">__lt__ (parser.py:1961)</text></g><g><title>insertionSortExpensive (sorts.py:13) (15 samples, 0.42%)</title><rect x="99.5198%" y="84" width="0.4237%" height="15" fill="rgb(212,28,1)" fg:x="3523" fg:w="15"/><text x="99.7698%" y="94.50"></text></g><g><title>all (3,540 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(248,164,17)" fg:x="0" fg:w="3540"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (mainFlameGraph.py:62) (3,540 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(222,171,42)" fg:x="0" fg:w="3540"/><text x="0.2500%" y="78.50">&lt;module&gt; (mainFlameGraph.py:62)</text></g></svg></svg>